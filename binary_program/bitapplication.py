x = 0b10111110

# 下から３ビットを取り出す
print(bin(x & 0b111))

# 右から５ビット目から2ビットを取り出す.
print(format((x >> 5) & 0b11, '02b'))

#NOTの計算結果をANDでマスクすれば、桁数を限定してマイナスを排除
print(bin(~1 & 0b1111))

# 101110の中央の2ビットだけを0にしたい場合、NOTを使うことで消したい部分に注目したコードとなる
print(bin(0b101110 & ~0b001100))

#残したい場所に注目
print(bin(0b101110 & 0b110011))

#bitの結合
print(bin((0b101 << 3) | 0b110))

#合成したいところにすでに値がある場合ANDで消してから
print(bin(0b101101 & 0b111000 | 0b011))

#違うところ　(XOR)
print(bin(0b11101011101110101 ^ 0b11101101101110101))

#値交換
a = 56
b = 45
print(a, b)
a = a ^ b
b = a ^ b
a = a ^ b
print(a, b)

# a << n a * 2^n
# a >> n a / 2^n

